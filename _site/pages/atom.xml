<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>圣泉山人—随记</title>
    <link></link>
    <description>My personal blog</description>
    
      <item>
        <title>memcache实现高可用方案</title>
        <link>/2015/09/06/Linux%20-%20memcache.html</link>
        <guid isPermaLink="true">/2015/09/06/Linux%20-%20memcache.html</guid>
        <pubDate>Sun, 06 Sep 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;memcache实现高可用方案&lt;/h1&gt;

&lt;p&gt;源码：&lt;a href=&quot;http://yunpan.cn/cHqfqdQagStBV&quot;&gt;http://yunpan.cn/cHqfqdQagStBV&lt;/a&gt;  访问密码 cb6f&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实现方案&lt;/strong&gt;：使用&lt;code&gt;repcached&lt;/code&gt;实现高可用&lt;br/&gt;
repcached：全称 replication cached是由日本人发明的memcached的高可用性技术，简称&lt;code&gt;复制缓冲区技术&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用场景&lt;/strong&gt;：它是一个&lt;strong&gt;单master&lt;/strong&gt; &lt;strong&gt;单slave&lt;/strong&gt;的方案，但它的 master/slave都是可读写的，而且可以相互同步，如果 master 宕机， slave侦测后，它会自动 listen成为 master；而如果 slave坏掉， master也会侦测到连接断，它就会重新 listen等待新的 slave加入。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实现步骤&lt;/strong&gt;：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;环境搭建
&lt;code&gt;&amp;gt; yum -y install gcc gcc-c++ libevent-devel&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载 memcached-1.2.8-repcached-2.2.tar.gz
&lt;code&gt;&amp;gt; wget http://downloads.sourceforge.net/repcached/memcached-1.2.8-repcached-2.2.tar.gz&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压配置repcached
&lt;code&gt;&amp;gt; tar zxvf memcached-1.2.8-repcached-2.2.tar.gz&lt;/code&gt;
&lt;code&gt;&amp;gt; ./configure --enable-replication --program-transform-name=s/memcached/repcached/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编译安装 
&lt;code&gt;&amp;gt; make &amp;amp;&amp;amp; make install&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动repcached (&lt;strong&gt;注意不要使用 root 来启动服务&lt;/strong&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;启动主服务
&lt;code&gt;&amp;gt;  /usr/local/bin/repcached -p 11211 -v -d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动从服务
&lt;code&gt;&amp;gt;  /usr/local/bin/repcached -p 11212 -x localhost -v -d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注意：可以使用 &lt;code&gt;ps aux | grep repcached&lt;/code&gt;  命令来查看进程&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;参数解释
-d ： 后台运行memcached进程
-p ： 默认监听端口11211  11212
-x ： 监听高可用机器，如果是监听默认端口不用写端口号，localhost就是监听本机,作用：第二个repcached监听第一个repcached如果有问题就接管&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试
先链接 11211 这个端口的服务，设置name 的值是  asion
&lt;code&gt;&amp;gt; telnet localhost 11211&lt;/code&gt;
&lt;code&gt;&amp;gt; set name 0 0 5&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;注意：在telnet 使用 quit 回车退出&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;然后使用 11212 这个端口的服务
    &lt;code&gt;&amp;gt; telnet localhost 11212&lt;/code&gt;
    &lt;code&gt;&amp;gt; get name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;同样的测试可以反之在进行&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实验完成!&lt;/strong&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>高并发</title>
        <link>/2015/08/03/about-optimize.html</link>
        <guid isPermaLink="true">/2015/08/03/about-optimize.html</guid>
        <pubDate>Mon, 03 Aug 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;大型网站，比如门户网站，在面对大量用户访问、高并发请求方面，基本的解决方案集中在这样几个环节：使用高性能的服务器、高性能的数据库、高效率的编程语言、还有高性能的Web容器。这几个解决思路在一定程度上意味着更大的投入。&lt;/p&gt;

&lt;h2&gt;防盗链怎么做？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;非技术手段 ： 给图片添加水印logo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;技术手段   ： 利用重写规则。判断请求头里面的referer是否含有本网站域名，如果没有则禁止访问或者重写成其他地址。但是还是可以用curl伪装curl。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;怎么应对网站高并发？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;主要处理方式就是分流。&lt;/p&gt;

&lt;p&gt;从架构上可以采用分层架构，增加服务器集群，并使用负载均衡来减轻web服务器的压力，数据库服务器采用读写分离，主从复制的方式，来减轻数据库服务器的压力。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;尽量减少http请求：合并图片，像外部js文件可以合并在一起、资源分布部署、防盗链等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器端采用缓存技术（速度 ：内存缓存&amp;gt;静态缓存&amp;gt;查询数据库）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合理设计数据库，使用高效sql语句，合理建立索引等。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;大流量（访问网站的量）解决方案？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;减少http请求（比如合并图片）&lt;/li&gt;
&lt;li&gt;配置缓存，让浏览器缓存更新不频繁资源--现在浏览器一般默认是缓存的，不用单独配置。&lt;/li&gt;
&lt;li&gt;配置压缩，服务器端压缩，客户端解压&lt;/li&gt;
&lt;li&gt;把比较占用流量的资源单独部署&lt;/li&gt;
&lt;li&gt;防盗链&lt;/li&gt;
&lt;li&gt;买带宽&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;大存储的解决方式？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;缓存技术（页面静态化+内存缓存技术）&lt;/li&gt;
&lt;li&gt;数据库方面的优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;怎么配置MPM？？？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;在httpd.conf里开启，MPM扩展  : Include conf/extra/httpd-mpm.conf在mpm的辅助配置文件（extra/httpd-mpm-conf）中进行配置大部分网站，中型网站推荐配置如下 ：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IfModule&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mpm_prefork_module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;StartServers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;#预先启动&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;MinSpareServers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;MaxSpareServers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;#最大空闲进程&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;ServerLimit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;#用于修改apache编程参数&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;MaxClients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;#最大并发数&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;MaxRequestsPerChild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;#一个进程对应的线程数，对worker更效果。如果是0， 则不让进程死掉。 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IfModule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;pv值如果百万级别：ServerLimit  2500       MaxClients 2000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;怎么配置压缩，以减少传输的数据量？？？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;要开启gzip压缩的mod&lt;em&gt;deflate模块： LoadModule deflate&lt;/em&gt;module modules/mod_deflate.so&lt;/li&gt;
&lt;li&gt;在虚拟主机里面针对具体的文件类型进行配置。例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ifmodule&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mod_deflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;DeflateCompressionLevel&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;#压缩级别为6，可1-9，推荐为6 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DEFLATE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plain&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#压缩文本文件 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DEFLATE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#压缩html文件 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DEFLATE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#压缩xml文件&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ifmodule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;压缩是要耗费cup资源的，图片、视频等文件压缩效果不好，一般压缩文本型文件即可。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>Linux 4：磁盘与文件系统管理</title>
        <link>/2015/07/06/Linux4.html</link>
        <guid isPermaLink="true">/2015/07/06/Linux4.html</guid>
        <pubDate>Mon, 06 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;认识EXT2文件系统&lt;/h3&gt;

&lt;p&gt;每种操作系统能够使用的文件系统并不相同。 举例来说，windows 98以前的微软操作系统主要利用的文件系统是&lt;code&gt;FAT(或FAT16)&lt;/code&gt;，windows 2000以后的版本有所谓的&lt;code&gt;NTFS&lt;/code&gt;文件系统，至于Linux的正统文件系统则为&lt;code&gt;Ext2&lt;/code&gt;(Linux second extended file system, ext2fs)这一个。此外，在默认的情况下，windows操作系统是不会认识Linux的Ext2的。&lt;/p&gt;

&lt;p&gt;那么文件系统是如何运行的呢？这与操作系统的文件数据有关。较新的操作系统的文件数据除了文件实际内容外，通常含有非常多的属性，例如Linux操作系统的文件权限(rwx)与文件属性(拥有者、群组、时间参数等)。 文件系统通常会将这两部份的数据分别存放在不同的区块，权限与属性放置到&lt;code&gt;inode&lt;/code&gt;中，至于实际数据则放置到&lt;code&gt;data block&lt;/code&gt;区块中。 另外，还有一个超级区块(&lt;code&gt;superblock&lt;/code&gt;)会记录整个文件系统的整体信息，包括inode与block的总量、使用量、剩余量等。&lt;/p&gt;

&lt;h3&gt;文件系统的简单操作&lt;/h3&gt;

&lt;h3&gt;磁盘的分割、格式化、检验与挂载&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;磁盘分区： fdisk, partprobe&lt;/li&gt;
&lt;li&gt;磁盘格式化： mkfs, mke2fs&lt;/li&gt;
&lt;li&gt;磁盘检验： fsck, badblocks&lt;/li&gt;
&lt;li&gt;磁盘挂载与卸除： mount, umount&lt;/li&gt;
&lt;li&gt;磁盘参数修订： mknod, e2label, tune2fs, hdparm&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;配置启动挂载&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;启动挂载 /etc/fstab 及 /etc/mtab&lt;/li&gt;
&lt;li&gt;特殊装置 loop 挂载(映象档不刻录就挂载使用)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;内存置换空间(swap)之建置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;使用实体分割槽建置swap&lt;/li&gt;
&lt;li&gt;使用文件建置swap&lt;/li&gt;
&lt;li&gt;swap使用上的限制&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;文件系统的特殊观察与操作&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;boot sector 与 superblock 的关系&lt;/li&gt;
&lt;li&gt;磁盘空间之浪费问题&lt;/li&gt;
&lt;li&gt;利用 GNU 的 parted 进行分割行为&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;重点回顾&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基本上 Linux 的正统文件系统为 Ext2 ，该文件系统内的信息主要有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;superblock：记录此 filesystem 的整体信息，包括inode/block的总量、使用量、剩余量， 以及文件系统的格式与相关信息等；&lt;/li&gt;
&lt;li&gt;inode：记录文件的属性，一个文件占用一个inode，同时记录此文件的数据所在的 block 号码；&lt;/li&gt;
&lt;li&gt;block：实际记录文件的内容，若文件太大时，会占用多个 block 。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ext2 文件系统的数据存取为索引式文件系统(indexed allocation)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要碎片整理的原因就是文件写入的 block 太过于离散了，此时文件读取的效能将会变的很差所致。 这个时候可以透过碎片整理将同一个文件所属的 blocks 汇整在一起。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ext2文件系统主要有：boot sector, superblock, inode bitmap, block bitmap, inode table, data block 等六大部分。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data block 是用来放置文件内容数据地方，在 Ext2 文件系统中所支持的 block 大小有 1K, 2K 及 4K 三种而已&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inode 记录文件的属性/权限等数据，其他重要项目为： 每个 inode 大小均固定为 128 bytes； 每个文件都仅会占用一个 inode 而已； 因此文件系统能够创建的文件数量与 inode 的数量有关；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件的 block 在记录文件的实际数据，目录的 block 则在记录该目录底下文件名与其 inode 号码的对照表；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;日志式文件系统 (journal) 会多出一块记录区，随时记载文件系统的主要活动，可加快系统复原时间；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux 文件系统为添加效能，会让主存储器作为大量的磁盘高速缓存；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实体链接只是多了一个文件名对该 inode 号码的链接而已；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;符号链接就类似Windows的快捷方式功能。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;磁盘的使用必需要经过：分割、格式化与挂载，分别惯用的命令为：fdisk, mkfs, mount三个命令&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动自动挂载可参考/etc/fstab之配置，配置完毕务必使用 mount -a 测试语法正确否；&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;参考资料&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vbird.dic.ksu.edu.tw/linux_basic/0230filesystem.php#harddisk&quot;&gt;鸟哥的Linux私房菜 第八章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      </item>
    
      <item>
        <title>Linux 3：文件与目录管理</title>
        <link>/2015/07/05/Linux3.html</link>
        <guid isPermaLink="true">/2015/07/05/Linux3.html</guid>
        <pubDate>Sun, 05 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;目录的相关操作&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.         # 代表此层目录
..        # 代表上一层目录
-         # 代表前一个工作目录
~         # 代表『目前使用者身份』所在的家目录
~account  # 代表 account 这个使用者的家目录(account是个帐号名称)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;在所有目录底下都会存在的两个目录，分别是&lt;code&gt;.&lt;/code&gt;与&lt;code&gt;..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;根目录的上一层&lt;code&gt;(..)&lt;/code&gt;与根目录自己&lt;code&gt;(.)&lt;/code&gt;是同一个目录&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;几个常见的处理目录的命令&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;cd：变换目录，cd是Change Directory的缩写&lt;/li&gt;
&lt;li&gt;pwd：显示目前的目录，pwd是Print Working Directory的缩写&lt;/li&gt;
&lt;li&gt;mkdir：创建一个新的目录&lt;/li&gt;
&lt;li&gt;rmdir：删除一个空的目录&lt;/li&gt;
&lt;li&gt;mv：移动文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pwd -P                   # -P：代表显示正确的完整路径，而不是连接路径
mkdir -m xxx             # -m：直接配置文件的权限
mkdir -p test1/test2     # -p：直接将所需要的目录(包含上一级目录)递回创建起来！
PATH=&amp;quot;$PATH&amp;quot;:/root       # 将/root路径加入PATH环境变量中
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;文件与目录管理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;文件与目录的检视： ls&lt;/li&gt;
&lt;li&gt;复制、删除与移动： cp, rm, mv&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cp -a        # 将文件的所有特性都一起复制过来
cp -p        # 连同文件的属性一起复制过去，而非使用默认属性(备份常用)
cp -r        # 可以复制目录，但是，文件与目录的权限可能会被改变
rm -i        # 互动模式，在删除前会询问使用者是否动作
rm -r        # 连目录下的东西一起删掉，并且不会询问，慎用
mv -f        # force强制移动，如果目标文件已经存在，不会询问而直接覆盖
mv -i        # 若目标文件 (destination) 已经存在时，就会询问是否覆盖
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;文件内容查询&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;直接检视文件内容： cat, tac, nl （常用）&lt;/li&gt;
&lt;li&gt;可翻页检视： more, less （常用）&lt;/li&gt;
&lt;li&gt;数据撷取： head, tail&lt;/li&gt;
&lt;li&gt;非纯文字档： od&lt;/li&gt;
&lt;li&gt;修改文件时间与建置新档： touch&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cat [-AbEnTv] filename # 由第一行开始显示文件内容。-b列出非空白行行号；-n列出所有行号。
tac                    # 从最后一行开始显示文件内容，tac就是cat倒着写！
nl                     # 显示文件内容，顺便输出行号
more                   # 一页一页地显示文件内容
less                   # 与more类似，但可以往前翻页
head [-n number]       # 只看文件头几行，默认是10行，number是自定义行数
tail                   # 只看文件尾几行，文件很大的时候常用
od                     # 以二进制方式读取文件内容
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;文件与目录的默认权限与隐藏权限&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;文件默认权限：umask&lt;/li&gt;
&lt;li&gt;文件隐藏属性： chattr, lsattr&lt;/li&gt;
&lt;li&gt;文件特殊权限：SUID, SGID, SBIT, 权限配置&lt;/li&gt;
&lt;li&gt;观察文件类型：file&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;umask           # 后三位数是被拿走的权限分数，比如0022，u没有被拿走权限，g和o被拿走了w权限
umask -S        # 以符号类型来显示权限
umask number    # 配置自己需要的权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在默认的情况中，root的umask会拿掉比较多的属性，root的umask默认是&lt;code&gt;022&lt;/code&gt;， 这是基於安全的考量啦～至於一般身份使用者，通常他们的 umask 为&lt;code&gt;002&lt;/code&gt; ，亦即保留同群组的写入权力。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;特殊权限&lt;code&gt;s&lt;/code&gt;和&lt;code&gt;t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set UID，简称SUID，当s标志在文件拥有者的x项目为SUID，对目录无效&lt;/li&gt;
&lt;li&gt;Set GID，简称SGID，当s标志在群组的x项目为SGID，对目录有效&lt;/li&gt;
&lt;li&gt;Sticky Bit, 简称SBIT，目前只针对目录有效，对於文件已经没有效果了&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;配置SUID,SGID,SBIT权限&lt;/h3&gt;

&lt;p&gt;在原有的权限数字前面加上需要配置的权限数字。
比如&lt;code&gt;755&lt;/code&gt;-&amp;gt;&lt;code&gt;4755&lt;/code&gt; ，就意味着&lt;code&gt;-rwxr-xr-x&lt;/code&gt;变为了&lt;code&gt;-rwsr-xr-x&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;4 为 SUID&lt;/li&gt;
&lt;li&gt;2 为 SGID&lt;/li&gt;
&lt;li&gt;1 为 SBIT&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;chmod 4755 filename
chmod u=rwxs,go=x test; ls -l test      # 配置权限为-rws--x--x的模样
chmod g+s,o+t test; ls -l test          # 配置权限为-rws--s--t，即加入SGID,SBIT权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;命令与文件的搜寻&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;命令档名的搜寻：which&lt;/li&gt;
&lt;li&gt;文件档名的搜寻：whereis, locate, find&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;权限与命令的关系&lt;/h3&gt;

&lt;h4&gt;一、让使用者能进入某目录成为『可工作目录』的基本权限为何：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;可使用的命令：例如 cd 等变换工作目录的命令；&lt;/li&gt;
&lt;li&gt;目录所需权限：使用者对这个目录至少需要具有 x 的权限&lt;/li&gt;
&lt;li&gt;额外需求：如果使用者想要在这个目录内利用 ls 查阅档名，则使用者对此目录还需要 r 的权限。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;二、使用者在某个目录内读取一个文件的基本权限为何？&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;可使用的命令：例如本章谈到的 cat, more, less等等&lt;/li&gt;
&lt;li&gt;目录所需权限：使用者对这个目录至少需要具有 x 权限；&lt;/li&gt;
&lt;li&gt;文件所需权限：使用者对文件至少需要具有 r 的权限才行！&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;三、让使用者可以修改一个文件的基本权限为何？&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;可使用的命令：例如 nano 或未来要介绍的 vi 编辑器等；&lt;/li&gt;
&lt;li&gt;目录所需权限：使用者在该文件所在的目录至少要有 x 权限；&lt;/li&gt;
&lt;li&gt;文件所需权限：使用者对该文件至少要有 r, w 权限&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;四、让一个使用者可以创建一个文件的基本权限为何？&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;目录所需权限：使用者在该目录要具有 w,x 的权限，重点在 w 啦！&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;五、让使用者进入某目录并运行该目录下的某个命令之基本权限为何？&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;目录所需权限：使用者在该目录至少要有 x 的权限；&lt;/li&gt;
&lt;li&gt;文件所需权限：使用者在该文件至少需要有 x 的权限&lt;/li&gt;
&lt;/ul&gt;
</description>
      </item>
    
      <item>
        <title>Linux 2：文件权限与目录配置</title>
        <link>/2015/07/04/Linux2.html</link>
        <guid isPermaLink="true">/2015/07/04/Linux2.html</guid>
        <pubDate>Sat, 04 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;Linux最优秀的地方之一，就在于它的多用户、多任务环境。Linux一般将文件可存取访问的身份分为3个类别，分别是owner（用户）、group（用户组）、others（其他人），且3种身份都各自有自己的read，write，execute等权限。&lt;/p&gt;

&lt;h3&gt;用户身份与用户组记录的文件&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;\etc\passwd     #所有系统账号的相关信息
\etc\shadow     #个人的密码
\etc\group      #Linux所有的组名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;文件权限概念&lt;/h3&gt;

&lt;p&gt;当屏幕前面出现“Permission deny”的时候，肯定是权限设置错误。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ls -al          #ls:list，列出所有文件的详细信息
ls -l           #显示文件，属性的第一个字段是文件的权限，共10位，比如-rwxr-xr--，表示owner具有rwx权限，group具有rx权限，others只具有r权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;改变文件属性与权限&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;chgrp       #改变文件所属用户组，具体句法记得使用 man page 查询
chown -R 用户账号:所在组群 文件名      #改变文件所有者
chmod       #改变文件的权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中，chmod修改权限的方法有两种，分别是符号法与数字法，数字法中r，w，x的数值分别是4，2，1。&lt;/p&gt;

&lt;p&gt;要开放“目录”（注意不是“文件”）给任何人看，应该至少同时给予r和x权限，但w权限不可随便给予。&lt;/p&gt;

&lt;h3&gt;文件种类与扩展名&lt;/h3&gt;

&lt;p&gt;使用&lt;code&gt;ls -l&lt;/code&gt;查看到的十个字符中，第一个字符为文件的类型：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-: 普通文件（regular file）&lt;/li&gt;
&lt;li&gt;d: 目录文件（directory）&lt;/li&gt;
&lt;li&gt;l: 连接文件，类似于windows的快捷方式（link）&lt;/li&gt;
&lt;li&gt;b: 块设备文件（block）&lt;/li&gt;
&lt;li&gt;c: 字符设备文件（character）&lt;/li&gt;
&lt;li&gt;s: 套接字（sockets）&lt;/li&gt;
&lt;li&gt;p: 管道（FIFO, pipe）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Linux目录配置标准：FHS&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/linuxDIRTREE.gif&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;

&lt;p&gt;根据FHS的定义，最好将&lt;code&gt;/var&lt;/code&gt;独立出来，这样至少/var死掉的时候，根目录还活着，还能够进入救援模式。&lt;/p&gt;

&lt;h3&gt;绝对路径与相对路径&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;cd/var/log(absolute)&lt;/li&gt;
&lt;li&gt;cd../var/log(relative)&lt;/li&gt;
&lt;li&gt;.: 代表当前的目录，也可以用./来表示&lt;/li&gt;
&lt;li&gt;..: 代表上一层目录，也可以用../来表示&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;例子&lt;/h3&gt;

&lt;p&gt;将install.log文件复制成为LAYtest.log，并且要给linanya这个人读写权限，可以这样做：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[root@localhost ~]# cp install.log LAYtest.log     #若复制文件夹，用cp -r
[root@localhost ~]# ls -al LAYtest.log 
-rw-r--r-- 1 root root 62826 9月  17 15:19 LAYtest.log     #虽然完成了复制，但仍然是root的文件
[root@localhost ~]# chown linanya LAYtest.log 
[root@localhost ~]# ls -al LAYtest.log       
-rw-r--r-- 1 linanya root 62826 9月  17 15:19 LAYtest.log  #文件变成linanya的
[root@localhost ~]# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Linux 1：登陆与在线求助man page</title>
        <link>/2015/07/03/Linux.html</link>
        <guid isPermaLink="true">/2015/07/03/Linux.html</guid>
        <pubDate>Fri, 03 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;查看内核版本&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;uname -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;稳定版本的偶数版，如2.6.x，适合于商业与家用环境使用；开发中版本，如2.5.x，适合开发特殊功能的环境。&lt;/p&gt;

&lt;h3&gt;登陆&lt;/h3&gt;

&lt;p&gt;Mac：（若以root身份登陆，将username改为root）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ssh username@IPaddress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Linux：(若以root身份登陆，将username删掉）Linux默认root的提示符为#,而一般身份用户的提示符为$。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;su - username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;注销Linux&lt;/h3&gt;

&lt;p&gt;注销Linux并不意味着关机，只是用户离开系统。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;基础命令的操作&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;command [-options] parameter1 parameter2 ···
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;echo $LANG   #显示目前支持的语言
LANG=en_US   #将语言改为英文系
date         #显示日期与实践
cal 10 2014  #显示日历
bc           #计算器
quit         #退出
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;重要的热键&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;[tab]&lt;/code&gt;：连按两次，具有“命令补全”和“文件补齐”的作用。
&lt;code&gt;[control]+c&lt;/code&gt;：中断目前程序。
&lt;code&gt;[control]+d&lt;/code&gt;：键盘输入结束；直接离开文字界面（相当于`&lt;code&gt;exit&lt;/code&gt;）。&lt;/p&gt;

&lt;h3&gt;在线求助 man page&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;man command  #command是要查询的命令名称
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;进入man命令后，可按&lt;code&gt;空格&lt;/code&gt;往下翻页，按&lt;code&gt;q&lt;/code&gt;键离开。
在man page中，可以在任何时候输入&lt;code&gt;/keyword&lt;/code&gt;来查询关键字，比如/date.&lt;/p&gt;

&lt;h3&gt;正确的关机方法&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;who         #查看目前有谁在线
netstat -a  #查看网络的联机状态
ps -aux     #查看后台执行的程序
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数据同步写入磁盘：为了防止不正常关机导致的内存数据没有来得及写入磁盘，在文字界面输入&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sync 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;惯用的关机命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;shutdown -h now     #立刻关机
shutdown -h 20:25   #晚上8点25分关机
shutdown -h +10     #过十分钟后关机
shutdown -r now     #立刻重启
shutdown -r +30 ‘The system will be reboot’    #再过30分钟关机，并显示后面的消息给所有在线用户
shutdown -k now ‘The system will be reboot’    #仅发出警告，系统并不会真正关机
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启、关机：reboot，halt，poweroff。务必用man去查询一下。&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Linux 0：实际问题</title>
        <link>/2015/07/02/Linux-Problems.html</link>
        <guid isPermaLink="true">/2015/07/02/Linux-Problems.html</guid>
        <pubDate>Thu, 02 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://book.douban.com/subject/4889838/&quot;&gt;《鸟哥的Linux私房菜——基础学习篇》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://book.douban.com/subject/2338464/&quot;&gt;《鸟哥的Linux私房菜——服务器架设篇》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本系列文章分为两部分：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;系统学习上面两本书的笔记。&lt;/li&gt;
&lt;li&gt;实际中遇到的问题及解决方案，即本文内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;实际问题&lt;/h2&gt;

&lt;h2&gt;1. 建立网络映射&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Mac：&lt;code&gt;Finder&lt;/code&gt;-&amp;gt;&lt;code&gt;前往&lt;/code&gt;-&amp;gt;&lt;code&gt;连接服务器&lt;/code&gt;-&amp;gt;输入&lt;code&gt;smb://IPaddress/samba&lt;/code&gt;-&amp;gt;&lt;code&gt;连接&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Linux：&lt;code&gt;位置&lt;/code&gt;-&amp;gt;&lt;code&gt;连接服务器&lt;/code&gt;-&amp;gt;“服务类型”选择&lt;code&gt;自定义位置&lt;/code&gt;-&amp;gt;输入&lt;code&gt;smb://IPaddress/samba&lt;/code&gt;-&amp;gt;&lt;code&gt;连接&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;2. ssh登陆失败&lt;/h2&gt;

&lt;p&gt;以root身份远程登陆服务器，密码正确，却显示如下警告：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;man-in-the-middle attack&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;!
It is also possible that a host key has just been changed.
The fingerprint &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the RSA key sent by the remote host is
3a:17:4b:6e:62:e6:94:df:09:78:99:90:51:68:18:62.
Please contact your system administrator.
Add correct host key in /Users/AnyaLin/.ssh/known_hosts to get rid of this message.
Offending RSA key in /Users/AnyaLin/.ssh/known_hosts:4
RSA host key &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; 222.195.93.129 has changed and you have requested strict checking.
Host key verification failed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vi ~/.ssh/known_hosts     &lt;span class=&quot;c&quot;&gt;#选中最后一条登陆记录，双击`d`删除，按“：”进入末行编辑模式，输入“x”，回车&lt;/span&gt;
ssh root@222.195.93.129   &lt;span class=&quot;c&quot;&gt;#再次登陆&lt;/span&gt;
The authenticity of host &lt;span class=&quot;s1&quot;&gt;&amp;#39;222.195.93.129 (222.195.93.129)&amp;#39;&lt;/span&gt; can&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;t be established.
RSA key fingerprint is 3a:17:4b:6e:62:e6:94:df:09:78:99:90:51:68:18:62.
Are you sure you want to &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; connecting &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;yes/no&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;?    &lt;span class=&quot;c&quot;&gt;#输入yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. tar.gz 文件解压&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;打开终端&lt;/li&gt;
&lt;li&gt;进入需要解压的xxxx.tar.gz文件所在目录&lt;/li&gt;
&lt;li&gt;$ tar xvfz xxxx.tar.gz&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/p&gt;

&lt;h2&gt;4. 新建文件命令&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;touch a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;=======&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;cc60f2ed32a5f9727a68a2eb7f2f6a8a1eeac51a&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>Linux环境下redis的搭建</title>
        <link>/2015/06/15/linux-redis.html</link>
        <guid isPermaLink="true">/2015/06/15/linux-redis.html</guid>
        <pubDate>Mon, 15 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;本文主要介绍Linux环境下redis的搭建&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://yunpan.cn/cHqjyAVnp8hps&quot;&gt;redis 源码包&lt;/a&gt;  访问密码 e97d&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;操作系统环境&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;[root@asion ~]#   lsb_release  -a
LSB-Version:core-4.0-ia32:core-4.0-noarch:graphics-4.0-ia32:gr  aphics-4.0-noarch:printing-4.0-ia32:printing-4.0-noarch
Distributor ID:  CentOS
Description:    CentOS release 5.5 (Final)
Release:        5.
Codename:      Final&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编译环境准备&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;yum -y install make apr* autoconf automake curl-devel gcc gcc-c++ zlib-devel openssl openssl-devel pcre-devel gd kernel keyutils patch perl kernel-headers compat* mpfr cpp glibc libgomp libstdc++-devel ppl cloog-ppl keyutils-libs-devel libcom_err-devel libsepol-devel libselinux-devel krb5-devel zlib-devel libXpm* freetype libjpeg* libpng* php-common php-gd ncurses* libtool* libxml2 libxml2-devel patch cmake&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装TCL，不然 redis 的 make test 不会通过。也可以先安装 redis 再回过头来装 TCL (这步可忽略)
&lt;a href=&quot;http://sourceforge.net/projects/tcl/files/Tcl/&quot;&gt;下载地址&lt;/a&gt; 
编译安装：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;tar xvzf tcl8.6.1-src.tar.gz
cd tcl8.6.1/unix/
./configure
make
make test
make install&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://redis.io/&quot;&gt;下载redis源码&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wget  http://download.redis.io/releases/redis-3.0.4.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;解压下载的文件(无须configure，在make install 的时候指定安装地址，PREFIX 需要大写)
&amp;gt; tar -zxvf redis-3.0.4.tar.gz&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编译安装&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd redis-3.0.4
make
make PREFIX=/usr/local/redis install
cp redis.conf /usr/local/redis/redis.conf &lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注意：
如果在执行 make 的时候遇到以下错误(比如本人的 32 位的 CentOS5.5 就碰到了)：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;zmalloc.o: In function zmalloc&lt;em&gt;used&lt;/em&gt;memory:
/home/defonds/redis/redis-2.8.10/src/zmalloc.c:223: undefined reference to `_&lt;em&gt;sync&lt;/em&gt;add&lt;em&gt;and&lt;/em&gt;fetch_4&amp;#39;
collect2: ld returned 1 exit status
make[1]: *** [redis-server] Error 1
make[1]: Leaving directory /home/defonds/redis/redis-2.8.10/src
make: *** [all] Error 2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决方案：在执行 make 时加上参数 CFLAGS=&amp;quot;-march=i686&amp;quot; 就可以了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;make CFLAGS=&amp;quot;-march=i686&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;修改redis.conf 配置文件（daemonize yes  后台启动）
&amp;gt; vim redis.conf
&amp;gt; daemonize yes 
&amp;gt; ./bin/redis-server ./redis.conf&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ps aux | grep redis
./bin/redis-cli INFO&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;可以对redis 进行检测
&amp;gt; cd /usr/local/redis/bin
&amp;gt; ./redis-benchmark -t GET,SET&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，也可以添加 -q 对输出结果进行精简&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;./redis-benchmark -q -t GET,SET&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编译安装完成&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装PHP对redis的扩展 （Cannot find config.m4. 解决方案：进入扩展目录）
下载地址：http://pecl.php.net/package/redis&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压文件&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd phpredis-2.2.4
/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make
make install&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将生成的 memcache.so 动态库的目录添加到php.ini文件里面&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;vim /usr/local/php/etc/php.ini
extension_dir = &amp;quot;/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626&amp;quot;
extension=redis.so&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;到网站根目录添加测试文件 redis.php&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /var/www/html
vim redis.php&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;$redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;在浏览器的地址栏输入 http://localhost/memcache.php输入上述地址后 浏览器页面 输出 hello world ，则成功&lt;/li&gt;
&lt;/ul&gt;
</description>
      </item>
    
      <item>
        <title>linux 环境下 php 扩展安装通用方法</title>
        <link>/2015/06/15/linux-nginx.html</link>
        <guid isPermaLink="true">/2015/06/15/linux-nginx.html</guid>
        <pubDate>Mon, 15 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;linux 环境下 php 扩展安装通用方法&lt;/h1&gt;

&lt;p&gt;(本案例拿 php的mbstring 来做演示)
1. 首先进入到php源码包中的 ext 目录下 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; /usr/local/src/php-5.3.28/ext/mbstring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在mbstring 目录下(/usr/local/src/php-5.3.28/ext/mbstring 目录下)产生configure文件，执行如下命令&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;/usr/local/php/bin/phpize&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置编译(/usr/local/src/php-5.3.28/ext/mbstring 目录下) &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;./configure --with-php-config=/usr/local/php/bin/php-config &lt;/p&gt;

&lt;p&gt;make &amp;amp;&amp;amp; make install &lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在执行上面命令后会生成一个目录DIR(/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626)，里面包含 mbstring.so 文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置 php.ini 文件中的extension_dir=DIR ，然后加入一行  extension=mbstring.so&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;extension_dir=&amp;quot;/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626&amp;quot;&lt;/p&gt;

&lt;p&gt;extension=mbstring.so&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 phpinfo() 函数测试 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意：安装php的mcrypt时候出现问题？&lt;/p&gt;

&lt;p&gt;问题描述：在php对mcrypt的扩展时候，出现mcrypt.h not found. Please reinstall libmcrypt&lt;/p&gt;

&lt;p&gt;解决方案：
- 使用第三方的yum源来解决&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wget http://www.atomicorp.com/installers/atomic&lt;/p&gt;

&lt;p&gt;sh ./atomic  &lt;/p&gt;

&lt;p&gt;yum  install  php-mcrypt  libmcrypt  libmcrypt-devel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;使用php mcrypt 前必须先安装libmcrypt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;libmcrypt源码安装方法：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /usr/local/src&lt;/p&gt;

&lt;p&gt;wget http://softlayer.dl.sourceforge.net/sourceforge/mcrypt/libmcrypt-2.5.8.tar.gz&lt;/p&gt;

&lt;p&gt;tar -zxvf libmcrypt-2.5.8.tar.gz&lt;/p&gt;

&lt;p&gt;cd /usr/local/src/libmcrypt-2.5.8&lt;/p&gt;

&lt;p&gt;./configure --prefix=/usr/local&lt;/p&gt;

&lt;p&gt;make&lt;/p&gt;

&lt;p&gt;make install&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>lamp环境的搭建</title>
        <link>/2015/06/15/linux-lamp.html</link>
        <guid isPermaLink="true">/2015/06/15/linux-lamp.html</guid>
        <pubDate>Mon, 15 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;lamp环境的搭建&lt;/h1&gt;

&lt;p&gt;lamp源码包：&lt;a href=&quot;http://yunpan.cn/cHqsvIUPRgEgN&quot;&gt;http://yunpan.cn/cHqsvIUPRgEgN&lt;/a&gt;  访问密码 ca46 &lt;br/&gt;
linux操作系统：&lt;a href=&quot;http://yunpan.cn/cHqsNzJpiSfQf&quot;&gt;http://yunpan.cn/cHqsNzJpiSfQf&lt;/a&gt;  访问密码 9412 &lt;br/&gt;
mysql源码：&lt;a href=&quot;http://mirrors.sohu.com/mysql/&quot;&gt;http://mirrors.sohu.com/mysql/&lt;/a&gt;&lt;br/&gt;
httpd源码：&lt;a href=&quot;http://mirrors.sohu.com/mysql/&quot;&gt;http://apache.fayea.com/httpd/&lt;/a&gt;&lt;br/&gt;
PHP源码：&lt;a href=&quot;http://php.net/releases/&quot;&gt;http://php.net/releases/&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h2&gt;系统环境查看&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; [root@asion ~]#   lsb_release  -a
LSB-Version:core-4.0-ia32:core-4.0-noarch:graphics-4.0-ia32:gr  aphics-4.0-noarch:printing-4.0-ia32:printing-4.0-noarch
Distributor ID:  CentOS
Description:    CentOS release 5.5 (Final)
Release:        5.5
Codename:      Final
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编译环境的准备 (在编译之前，先安装好相应的编译器和库文件等)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;yum -y install make apr* autoconf automake curl-devel gcc gcc-c++ zlib-devel openssl openssl-devel pcre-devel gd kernel keyutils patch perl kernel-headers compat* mpfr cpp glibc libgomp libstdc++-devel ppl cloog-ppl keyutils-libs-devel libcom_err-devel libsepol-devel libselinux-devel krb5-devel zlib-devel libXpm* freetype libjpeg* libpng* php-common php-gd ncurses* libtool* libxml2 libxml2-devel patch cmake&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ftp环境的搭建（使用  非root  用户后，在ftp客户端上传相关的源码）
    &amp;gt; yum install -y vsftpd
    &amp;gt; useradd asion
    &amp;gt; service vsftpd status&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载相关的源码包(将源码cp到/usr/local/src/下，并进入)
    &amp;gt; cd /usr/local/src/
    &amp;gt; pwd&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压相关源码文件
    &amp;gt; tar -zxvf xxx.tar.gz&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入解压后的文件夹
    &amp;gt; cd xxx
    &amp;gt; ./configure --help
    &amp;gt; make
    &amp;gt; make install&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装成功后，在网站目录创建index.php文件，写入phpinfo()测试
    &amp;gt; touch index.php
    &amp;gt; echo &amp;#39;&amp;lt;?php phpinfo();&amp;gt;&amp;#39;  &amp;gt; index.php&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;具体安装&lt;/p&gt;

&lt;p&gt;a. libxml2 安装（xml和html文件相关依赖的库）
    &amp;gt; tar -zxvf libxml2-2.6.30
    &amp;gt; cd libxml2-2.6.30
    &amp;gt; ./configure --prefix=/usr/local/libxml2
    &amp;gt; make &amp;amp;&amp;amp; make install&lt;/p&gt;

&lt;p&gt;b. libmcrypt-2.5.8 安装（加密库）
    &amp;gt; cd /lamp/libmcrypt-2.5.8
    &amp;gt; ./configure --prefix=/usr/local/libmcrypt/
    &amp;gt; make 
    &amp;gt; make install&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;== 进入libmcrypt-2.5.8文件夹内的 libltdl
&amp;gt; cd ./libmcrypt-2.5.8/libltdl
&amp;gt; ./configure --enable-ltdl-install
&amp;gt; make
&amp;gt; make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;c. zlib库安装（不需要指定安装路径）
    &amp;gt; ./configure
    &amp;gt; make
    &amp;gt; make install &lt;/p&gt;

&lt;p&gt;d. png图片库安装
    &amp;gt; ./configure --prefix=/usr/local/libpng/
    &amp;gt; make
    &amp;gt; make install&lt;/p&gt;

&lt;p&gt;e. jpeg图片库安装（需要自己创建jpeg6）
    &amp;gt; mkdir /usr/local/jpeg6
    &amp;gt; mkdir /usr/local/jpeg6/bin
    &amp;gt; mkdir /usr/local/jpeg6/lib
    &amp;gt; mkdir /usr/local/jpeg6/include
    &amp;gt; mkdir -p /usr/local/jpeg6/man/man1
    &amp;gt; cd /lamp/jpeg-6b
    &amp;gt; ./configure --prefix=/usr/local/jpeg6/ --enable-shared --enable-static
    &amp;gt; make
    &amp;gt; make install&lt;/p&gt;

&lt;p&gt;f. freetype字体库安装
    &amp;gt; ./configure --prefix=/usr/local/freetype/
    &amp;gt; make
    &amp;gt; make install&lt;/p&gt;

&lt;p&gt;g. autoconfig生成makefile安装（不需要指定安装路径）
    &amp;gt; ./configure
    &amp;gt; make 
    &amp;gt; make install&lt;/p&gt;

&lt;p&gt;h. GD 库的安装
    &amp;gt; ./configure --prefix=/usr/local/gd2/ --with-jpeg=/usr/local/jpeg6/ --with-freetype=/usr/local/freetype/ --enable-m4&lt;em&gt;pattern&lt;/em&gt;allow 
    &amp;gt; make
    &amp;gt; make install&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;注意：当make的时候，出现以下错误 
configure.ac:64: error: possibly undefined macro: AM_ICONV 
If this token and others are legitimate, please use m4_pattern_allow. 
See the Autoconf documentation. 
make: *** [configure] Error 1 

解决方案：
解决办法 ，编译加m4_pattern_allow参数 
即：./configure --enable-m4_pattern_allow 
便能顺利编译安装
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;i. apache安装&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;./configure --prefix=/usr/local/apache2  --sysconfdir=/etc/httpd/ --enable-rewrite --enable-so --enable-headers --enable-expires  --enable-modules=most --enable-deflate&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;j. ncurses安装(Mysql安装前必须安装这个字符库)源码安装才需要)&lt;/p&gt;

&lt;p&gt;k. 安装mysql通用二进制包
    &amp;gt;  groupadd mysql
    &amp;gt;  useradd -g mysql mysql&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;  cd /usr/local/mysql-5.5.44-linux2.6-i686/
&amp;gt;  chown -R msyql.mysql  .
&amp;gt;  scripts/mysql_install_db --basedir=/usr/local/mysql  --user=mysql
&amp;gt;  chown -R root .
&amp;gt;  cp support-files/mysql.server /etc/init.d/mysqld

&amp;gt;  chkconfig --add mysqld
&amp;gt;  chkconfig mysqld on
&amp;gt;  cp support-files/my-medium.cnf /etc/my.cnf

&amp;gt;  service mysqld start
&amp;gt;  ps aux | grep mysqld  

注意：/usr/local/mysql/bin/mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory

解决方案：libaio.i386 0:0.3.106-5
&amp;gt; yum install libaio

注意： selinux 必须关闭
&amp;gt; sestatus -v
&amp;gt; getenforce

&amp;gt; 临时关闭
&amp;gt; setenforce 0

&amp;gt; 修改配置文件需要重启机器：
&amp;gt; 修改/etc/selinux/config 文件
&amp;gt; 将SELINUX=enforcing改为SELINUX=disabled
&amp;gt; 重启机器即可 

注意：
[root@localhost mysql]# service mysql start
Starting MySQL.. ERROR! The server quit without updating PID file (/var/lib/mysql/localhost.localdomain.pid).

解决方案：
    1. 注释/etc/my.cnf里的skip-federated注释掉即#skip-federated；
    2. my.cnf文件配置过高，重新定义其中的参数（根据服务器情况定义）；
    3. 杀掉mysql_safe和mysqld进程，然后再重启；
    4. 当前日志文件过大，超出了my.cnf中定义的大小（默认为64M），删除日志文件再重启；
    5. 其他情况，查看日志文件（本人是/usr/local/data/bogon.error，具体因人而异），然后具体分析；
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;l. 安装PHP
      &amp;gt; cd /usr/local/src/php-5.3.28
      &amp;gt; ./configure --prefix=/usr/local/php/ --with-config-file-path=/usr/local/php/etc/ --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql/ --with-libxml-dir=/usr/local/libxml2/ --with-jpeg-dir=/usr/local/jpeg6/ --with-freetype-dir=/usr/local/freetype/ --with-gd=/usr/local/gd2/ --with-mcrypt=/usr/local/libmcrypt/ --with-mysqli=/usr/local/mysql/bin/mysql_config --enable-soap --enable-mbstring=all --enable-sockets 
      &amp;gt;  make
      &amp;gt;  make install
      &amp;gt;  cp php.ini-dist /usr/local/php/etc/php.ini&lt;/p&gt;

&lt;p&gt;m. 打开Apache的配置文件（添加AddType这两行）&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /etc/httpd/
vim httpd.conf
AddType application/x-httpd-php .php
AddType application/x-httpd-source .phps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;n. 更改php.ini里面的时区（设置为亚洲/上海）
    &amp;gt; cd /usr/local/php/etc/
    &amp;gt; vim php.ini
    &amp;gt; date.timezone = Asia/Shanghai&lt;/p&gt;

&lt;p&gt;o. 在网站根目录建立测试文件
    &amp;gt; cd /var/www/html
    &amp;gt; vim index.php
    &amp;gt; phpinfo()&lt;/p&gt;

&lt;p&gt;p. 在浏览器地址栏输入 http://localhost/index.php&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      </item>
    
      <item>
        <title>Linux下 nginx安装 + php-fpm安装</title>
        <link>/2015/06/11/Lnmp.html</link>
        <guid isPermaLink="true">/2015/06/11/Lnmp.html</guid>
        <pubDate>Thu, 11 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;Linux下 nginx安装 + php-fpm安装&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编译环境准备&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;yum -y install gcc automake autoconf libtool make  gcc  gcc-c++&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一般都需要先装pcre、 zlib，前者为了重写rewrite，后者为了gzip压缩
源代码目录：/usr/local/src&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装pcre 和 zlib 和 ssl&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /usr/local/src
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.34.tar.gz 
tar -zxvf pcre-8.34.tar.gz
cd pcre-8.34
./configure
make
make install&lt;/p&gt;

&lt;p&gt;cd /usr/local/src
wget http://zlib.net/zlib-1.2.8.tar.gz
tar -zxvf zlib-1.2.8.tar.gz
cd zlib-1.2.8
./configure
make
make install&lt;/p&gt;

&lt;p&gt;cd /usr/local/src
wget http://www.openssl.org/source/openssl-1.0.1c.tar.gz
tar -zxvf openssl-1.0.1c.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nginx 安装&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /usr/local/src
wget http://nginx.org/download/nginx-1.4.2.tar.gz
tar -zxvf nginx-1.4.2.tar.gz
cd nginx-1.4.2&lt;/p&gt;

&lt;p&gt;./configure --sbin-path=/usr/local/nginx/nginx  \
--conf-path=/usr/local/nginx/nginx.conf  \
--pid-path=/usr/local/nginx/nginx.pid&lt;/p&gt;

&lt;p&gt;make
make install&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装成功后，/usr/local/nginx 目录下如下
fastcgi.conf            koi-win             nginx.conf.default
fastcgi.conf.default    logs                scgi&lt;em&gt;params
fastcgi&lt;/em&gt;params          mime.types          scgi&lt;em&gt;params.default
fastcgi&lt;/em&gt;params.default  mime.types.default  uwsgi&lt;em&gt;params
html                    nginx               uwsgi&lt;/em&gt;params.default
koi-utf                 nginx.conf          win-utf&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动之前先确保 80 端口没有被占用，执行 /usr/local/nginx/nginx 启动&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;netstat -an | grep 80&lt;/p&gt;

&lt;p&gt;lsof -i | grep 80&lt;/p&gt;

&lt;p&gt;netstat -tunpl | grep 80&lt;/p&gt;

&lt;p&gt;/usr/local/nginx/nginx&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fpm-php 安装(5.3.3之后默认自带 加上参数 --enable-fpm 开启)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;tar -zxvf php-5.3.28.tar.gz&lt;/p&gt;

&lt;p&gt;cd php-5.3.28&lt;/p&gt;

&lt;p&gt;./configure --prefix=/usr/local/php  --enable-fpm &lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更改nginx的配置文件 nginx.conf ，增加，并增加php-fpm的配置文件&lt;/p&gt;

&lt;p&gt;location ~ .php$ {
    root html;
    fastcgi&lt;em&gt;pass 127.0.0.1:9000;
    fastcgi&lt;/em&gt;index index.php;
    fastcgi&lt;em&gt;param SCRIPT&lt;/em&gt;FILENAME $document&lt;em&gt;root$fastcgi&lt;/em&gt;script&lt;em&gt;name;
    include fastcgi&lt;/em&gt;params;
}&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /usr/local/phpfpm/etc&lt;/p&gt;

&lt;p&gt;cp php-fpm.conf.default php-fpm.conf&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将 fpm-php 加入系统服务 (/usr/local/src/php-5.3.28/ )，并启动&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cp ./sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm&lt;/p&gt;

&lt;p&gt;chmod +x /etc/init.d/php-fpm&lt;/p&gt;

&lt;p&gt;chkconfig --add php-fpm&lt;/p&gt;

&lt;p&gt;chkconfig php-fpm on&lt;/p&gt;

&lt;p&gt;service php-fpm start&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 phpinfo() 函数测试即可&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;附：
I. 在编译安装时候可能遇到的一些问题
    a. 编译pcre错误
    libtool: compile: unrecognized option &lt;code&gt;-DHAVE_CONFIG_H&amp;#39;
    libtool: compile: Try&lt;/code&gt;libtool --help&amp;#39; for more information.
    make[1]: *** [pcrecpp.lo] Error 1
    make[1]: Leaving directory `/usr/local/src/pcre-8.34&amp;#39;
    make: *** [all] Error 2&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;解决方案：

&amp;gt; yum install -y g++

make 时候出错

解决方案：
&amp;gt; yum -y install openssl openssl-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;II. nginx编译选项&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;a. configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件

b. make是用来编译的，它从Makefile中读取指令，然后编译

c. make install是用来安装的，它也从Makefile中读取指令，安装到指定的位置

nginx的configure命令支持以下参数：

    --prefix=PATH  定义一个安装目录，也就是nginx的安装目录。默认使用 /usr/local/nginx

    --sbin-path=PATH 设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx

    --conf-path=PATH  设置在nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf

    --pid-path=PATH  设置nginx.pid文件，将存储的主进程的进程号。安装完成后，可以随时改变的文件名 ， 在nginx.conf配置文件中使用 PID指令。默认情况下，文件名 为prefix/logs/nginx.pid

    --error-log-path=PATH 设置主错误，警告，和诊断文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的error_log指令。默认情况下，文件名 为prefix/logs/error.log

    --http-log-path=PATH 设置主请求的HTTP服务器的日志文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的access_log指令。默认情况下，文件名 为prefix/logs/access.log

    --user=name 设置nginx工作进程的用户，默认的用户名是nobody

    --group=name  设置nginx工作进程的用户组。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的为非特权用户。

    --with-select_module --without-select_module 启用或禁用构建一个模块来允许服务器使用select()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll

    --with-poll_module --without-poll_module 启用或禁用构建一个模块来允许服务器使用poll()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll

    --without-http_gzip_module 不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库

    --without-http_rewrite_module 不编译重写模块。编译并运行此模块需要PCRE库支持

    --without-http_proxy_module 不编译http_proxy模块

    --with-http_ssl_module  使用https协议模块。默认情况下，该模块没有被构建。建立并运行此模块的OpenSSL库是必需的

    --with-pcre=PATH 设置PCRE库的源码路径。PCRE库的源码（版本4.4 - 8.30）需要从PCRE网站下载并解压。其余的工作是Nginx的./ configure和make来完成。正则表达式使用在location指令和 ngx_http_rewrite_module 模块中

    --with-pcre-jit 编译PCRE包含just-in-time compilation”（1.1.12中， pcre_jit指令）

    --with-zlib=PATH 设置的zlib库的源码路径。要下载从 zlib（版本1.1.3 - 1.2.5）的并解压。其余的工作是Nginx的./ configure和make完成。ngx_http_gzip_module模块需要使用zlib 

    --with-cc-opt=parameters
     设置额外的参数将被添加到CFLAGS变量。例如,当你在FreeBSD上使用PCRE库时需要使用:--with-cc-opt=&amp;quot;-I /usr/local/include。.如需要需要增加 select()支持的文件数量:--with-cc-opt=&amp;quot;-D FD_SETSIZE=2048&amp;quot;

    --with-ld-opt=parameters 设置附加的参数，将用于在链接期间。例如，当在FreeBSD下使用该系统的PCRE库,应指定:--with-ld-opt=&amp;quot;-L /usr/local/lib&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Status API Training Shop Blog About Pricing
© 2015 GitHub, Inc. Terms Privacy Security Contact Help&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Mysql优化小技巧</title>
        <link>/2015/06/02/mysql%20-%20optimize.html</link>
        <guid isPermaLink="true">/2015/06/02/mysql%20-%20optimize.html</guid>
        <pubDate>Tue, 02 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;Mysql优化小技巧&lt;/h1&gt;

&lt;h2&gt;索引碎片与维护&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;在长期的数据更新过程中, 索引文件和数据文件,都将产生空洞，形成碎片我们可以通过一个nop操作(不产生对数据实质影响的操作), 来修改表。比如: 表的引擎为InnoDB , 可以 &lt;code&gt;alter table tableName engine InnoDB&lt;/code&gt;也可以&lt;code&gt;optimize table tableName&lt;/code&gt;,也可以修复。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;： 修复表的数据及索引碎片，就会把所有的数据文件重新整理一遍，对于这个过程，如果表的行数比较大，也是非常耗费资源的操作。所以，不能频繁的修复。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;建议&lt;/strong&gt;：如果表的Update操作很频率，可以按 周/月 来修复，如果不频繁，可以更长的周期来做修复&lt;/p&gt;

&lt;h2&gt;重复索引和冗余索引的思考&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;重复索引:：是指 在同1个列(如name)， 或者 顺序相同的几个列(name,age)， 建立了多个索引。称为重复索引，重复索引没有任何帮助，只会增大索引文件，拖慢更新速度，必须去除。冗余索引：冗余索引是指2个索引所覆盖的列有重叠， 称为冗余索引，比如 x,m列， 加索引  index x(x)，  index xm(x, m)。x、xm索引， 两者的x列重叠了， 这种情况,称为冗余索引，甚至可以把 index mx(m, x) 索引也建立， mx、xm  也不是重复的，列的顺序不一样。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;in型子查询的陷阱&lt;/h2&gt;

&lt;p&gt;在ecshop商品表中，查询6号栏目的商品（6号是一个大栏目）
最直观的：&lt;br&gt;
&lt;code&gt;mysql&amp;gt; select goods_id,cat_id,goods_name from goods where cat_id in (select cat_id from ecs_category where parent_id=6);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;误区： 给我们的感觉是， 先查到内层的6号栏目的子栏目，如7,8,9,11然后外层，cat&lt;em&gt;id in (7,8,,9,11)
实际上： 如下图, goods表全扫描， 并逐行与category表对照，看parent&lt;/em&gt;id=6是否成立
&lt;img src=&quot;http://myyphp.github.io/public/img/posts/mysql_optimize1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://myyphp.github.io/public/img/posts/mysql_optimize2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;原因： mysql的查询优化器，针对In型做优化，被改成了exists的执行效果，当goods表越大时， 查询速度越慢&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;改进： 用连接查询来代替子查询
   &lt;code&gt;explain select goods_id,g.cat_id,g.goods_name from  goods as g inner join (select cat_id from ecs_category where parent_id=6) as t using(cat_id) \G&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;内层 select cat&lt;em&gt;id from ecs&lt;/em&gt;category where parent&lt;em&gt;id=6 ; 用到Parent&lt;/em&gt;id索引，返回4行，形成结果,设为 t&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第2次查询， t 和 goods 通过 cat&lt;em&gt;id 相连， 因为cat&lt;/em&gt;id在 goods表中有索引，所以相当于用7,8,911，快速匹配上goods的行。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;exists子查询&lt;/h2&gt;

&lt;p&gt;题： 查询有商品的栏目.按上面的理解，我们用join来操作，如下：
    &lt;code&gt;mysql&amp;gt; select c.cat_id, cat_name from ecs_category as c inner join  goods as  g on c.cat_id=g.cat_id group by cat_name;&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;优化1： 在group时， 用带有索引的列来group， 速度会稍快一些,另外，用int型 比 char型分组，也要快一些&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优化2： 在group时， 我们假设只取了A表的内容，group by 的列，尽量用A表的列，会比B表的列要快&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优化3： 从语义上去优化&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;select cat_id,cat_name from ecs_category where exists(select *from  goods where  goods.cat_id=ecs_category.cat_id)&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;rom子查询&lt;/h2&gt;

&lt;p&gt;注意：内层from语句查到的临时表，是没有索引的。所以： from的返回内容要尽量少max|min优化技巧&lt;/p&gt;

&lt;p&gt;有如下的地区表：
&lt;img src=&quot;http://myyphp.github.io/public/img/posts/mysql_optimize3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;我们查min(id)，id是主键，查min(id)非常快,但是，pid上没有索引， 现在要求查询3113地区的min(id)
&lt;code&gt;select min(id) from area where pid=69;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;试想 id是有顺序的，(默认索引是升续排列)， 因此,如果我们沿着id的索引方向走，那么 第1个 pid=69的索引结点，他的id就正好是最小的id。
&lt;code&gt;select  id  from area use index(primary) where pid=69 limit 1;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;count() 优化&lt;/h2&gt;

&lt;p&gt;误区： myisam的count()非常快&lt;/p&gt;

&lt;p&gt;答: 是比较快，但仅限于查询表的”所有行”比较快，因为Myisam对行数进行了存储。一旦有条件的查询, 速度就不再快了。尤其是where条件的列上没有索引。&lt;/p&gt;

&lt;p&gt;假如，id&amp;lt;100的商家都是我们内部测试的，我们想查查真实的商家有多少?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;select count(*) from tableName where id&amp;gt;=100;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;小技巧：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;select count(*) from tableName ; 快&lt;/code&gt;
&lt;code&gt;select count(*) from tableName where id &amp;lt; 100; 快&lt;/code&gt;
&lt;code&gt;select count(*) from tableName - select count(*) from tableName where id&amp;lt;100; 快&lt;/code&gt;
&lt;code&gt;select (select count(*) from tableName ) - (select count(*) from tableName where id&amp;lt;100)&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;group小技巧&lt;/h2&gt;

&lt;p&gt;注意：分组用于统计，而不用于筛选数据.&lt;/p&gt;

&lt;p&gt;比如： 统计平均分，最高分，适合； 但用于筛选重复数据，则不适合.。以及用索引来避免临时表和文件排序以A,B表连接为例 ，主要查询A表的列， 那么 &lt;code&gt;group by&lt;/code&gt; ,&lt;code&gt;order by&lt;/code&gt; 的列尽量相同，而且列应该显示声明为A的列&lt;/p&gt;

&lt;h2&gt;union优化&lt;/h2&gt;

&lt;p&gt;注意： &lt;code&gt;union all&lt;/code&gt; 不过滤 效率提高，如非必须，请用&lt;code&gt;union all&lt;/code&gt; ，因为 &lt;code&gt;union&lt;/code&gt;去重的代价非常高，放在PHP程序里去重更合适&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>linux 环境下 php 扩展安装通用方法</title>
        <link>/2015/05/20/linux-php.html</link>
        <guid isPermaLink="true">/2015/05/20/linux-php.html</guid>
        <pubDate>Wed, 20 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;linux 环境下 php 扩展安装通用方法&lt;/h1&gt;

&lt;p&gt;(本案例拿 php的mbstring 来做演示)
1. 首先进入到php源码包中的 ext 目录下 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; /usr/local/src/php-5.3.28/ext/mbstring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在mbstring 目录下(/usr/local/src/php-5.3.28/ext/mbstring 目录下)产生configure文件，执行如下命令&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;/usr/local/php/bin/phpize&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置编译(/usr/local/src/php-5.3.28/ext/mbstring 目录下) &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;./configure --with-php-config=/usr/local/php/bin/php-config &lt;/p&gt;

&lt;p&gt;make &amp;amp;&amp;amp; make install &lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在执行上面命令后会生成一个目录DIR(/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626)，里面包含 mbstring.so 文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置 php.ini 文件中的extension_dir=DIR ，然后加入一行  extension=mbstring.so&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;extension_dir=&amp;quot;/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626&amp;quot;&lt;/p&gt;

&lt;p&gt;extension=mbstring.so&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 phpinfo() 函数测试 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意：安装php的mcrypt时候出现问题？&lt;/p&gt;

&lt;p&gt;问题描述：在php对mcrypt的扩展时候，出现mcrypt.h not found. Please reinstall libmcrypt&lt;/p&gt;

&lt;p&gt;解决方案：
- 使用第三方的yum源来解决&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wget http://www.atomicorp.com/installers/atomic&lt;/p&gt;

&lt;p&gt;sh ./atomic  &lt;/p&gt;

&lt;p&gt;yum  install  php-mcrypt  libmcrypt  libmcrypt-devel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;使用php mcrypt 前必须先安装libmcrypt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;libmcrypt源码安装方法：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd /usr/local/src&lt;/p&gt;

&lt;p&gt;wget http://softlayer.dl.sourceforge.net/sourceforge/mcrypt/libmcrypt-2.5.8.tar.gz&lt;/p&gt;

&lt;p&gt;tar -zxvf libmcrypt-2.5.8.tar.gz&lt;/p&gt;

&lt;p&gt;cd /usr/local/src/libmcrypt-2.5.8&lt;/p&gt;

&lt;p&gt;./configure --prefix=/usr/local&lt;/p&gt;

&lt;p&gt;make&lt;/p&gt;

&lt;p&gt;make install&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>Mysql索引文件本身的数据结构</title>
        <link>/2015/05/02/mysql-index%20.html</link>
        <guid isPermaLink="true">/2015/05/02/mysql-index%20.html</guid>
        <pubDate>Sat, 02 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;h1&gt;Mysql索引文件本身的数据结构&lt;/h1&gt;

&lt;h2&gt;1、问题：索引本身是一种数据，也是需要一定的格式来存储到磁盘上的&lt;/h2&gt;

&lt;p&gt;索引文件如何存储呢？
不同的索引文件，存储的结构不一样，对于 MyiSam 和 Innodb 的索引文件，分别如下：
1. &lt;code&gt;MyiSam&lt;/code&gt; 存储引擎的索引结构是：B-tree（balance tree）
2. &lt;code&gt;Innodb&lt;/code&gt; 存储引擎的索引结构是：聚簇索引&lt;/p&gt;

&lt;h2&gt;2、什么是B-tree索引&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://myyphp.github.io/public/img/posts/mysql_index1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;h2&gt;3、什么是聚簇索引&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://myyphp.github.io/public/img/posts/mysql_index2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;h2&gt;4、几点说明&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可以看出 MyiSam存储引擎 的结构在 维护方面 更具优势，因为 Innodb的存储引擎的结构里的 索引值下面包含了该行记录，索引开销很大；但是在查询方面却有着 无可比拟的性能，不需要做回行处理（读取磁盘文件）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果项目不要使用事务可以有限考虑 MyiSam存储引擎来处理，具有更高效的维护更本&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在存在主键ID时，在批量插入数据的时候，MyiSam存储引擎，索引列不会进行排序，直接插入；但Innodb存储引擎会在排序后再插入，故会影响性能&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;5、测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;创建 &lt;code&gt;myisam&lt;/code&gt; 的表&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;CREATE TABLE my_isam (&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;       id int(11) NOT NULL DEFAULT &amp;#39;0&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;       name varchar(20) DEFAULT NULL,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;       address varchar(30) DEFAULT NULL,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;           PRIMARY KEY (id)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;  ) ENGINE=MyISAM DEFAULT CHARSET=utf8;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;创建 innodb 的表&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;CREATE TABLE `in_nodb` (&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;          id int(11) NOT NULL DEFAULT &amp;#39;0&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;          name varchar(20) DEFAULT NULL,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;          address varchar(30) DEFAULT NULL,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;          PRIMARY KEY (id)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;添加数据测试&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;myisam&lt;/code&gt;存储引擎：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;insert into  my_isam(id,name,address)  values(8, &amp;#39;jkeyll&amp;#39;, &amp;#39;shenzhen&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    insert into  my_isam(id,name,address)  values(10, &amp;#39;keyll&amp;#39;, &amp;#39;shenzhen&amp;#39;); &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    insert into  my_isam(id,name,address) values(3,&amp;#39;tony&amp;#39;,&amp;#39;hangzhou&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    insert into  my_isam(id,name,address) values(2,&amp;#39;andy&amp;#39;,&amp;#39;zhenzhou&amp;#39;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;innodb&lt;/code&gt;存储引擎：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;insert into  in_nodb(id,name,address)  values(8, &amp;#39;jkeyll&amp;#39;, &amp;#39;shenzhen&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    insert into  in_nodb(id,name,address)  values(10, &amp;#39;keyll&amp;#39;, &amp;#39;shenzhen&amp;#39;); &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    insert into  in_nodb(id,name,address) values(3,&amp;#39;tony&amp;#39;,&amp;#39;hangzhou&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    insert into  in_nodb(id,name,address) values(2,&amp;#39;andy&amp;#39;,&amp;#39;zhenzhou&amp;#39;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;对比：通过测试数据可以看出，在&lt;code&gt;myisam&lt;/code&gt;存储引擎在批量插入数据的时候，不会做排序处理，而&lt;code&gt;innodb&lt;/code&gt;则会先排序在处理&lt;/strong&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Git常用命令速查表</title>
        <link>/2015/03/10/Git-Resources.html</link>
        <guid isPermaLink="true">/2015/03/10/Git-Resources.html</guid>
        <pubDate>Tue, 10 Mar 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;master: 默认开发分支&lt;/p&gt;

&lt;p&gt;origin: 默认远程版本库&lt;/p&gt;

&lt;p&gt;Head: 默认开发分支&lt;/p&gt;

&lt;p&gt;Head^: Head的父提交&lt;/p&gt;

&lt;h3&gt;创建版本库&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git clone &amp;lt;url&amp;gt;   #克隆远程版本库
$ git init          #初始化本地版本库
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;修改和提交&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git status        #查看状态
$ git diff          #查看变更内容
$ git add .         #跟踪所有改动过的文件
$ git add &amp;lt;file&amp;gt;    #跟踪指定的文件
$ git mv &amp;lt;old&amp;gt;&amp;lt;new&amp;gt; #文件改名
$ git rm&amp;lt;file&amp;gt;      #删除文件
$ git rm --cached&amp;lt;file&amp;gt;            #停止跟踪文件但不删除
$ git commit -m &amp;quot;commit messages&amp;quot;  #提交所有更新过的文件
$ git commit --amend               #修改最后一次改动
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;查看提交历史&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git log                    #查看提交历史
$ git log -p &amp;lt;file&amp;gt;          #查看指定文件的提交历史
$ git blame &amp;lt;file&amp;gt;           #以列表方式查看指定文件的提交历史
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;撤销&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git reset --hard HEAD      #撤销工作目录中所有未提交文件的修改内容
$ git checkout HEAD &amp;lt;file&amp;gt;   #撤销指定的未提交文件的修改内容
$ git revert &amp;lt;commit&amp;gt;        #撤销指定的提交
$ git log --before=&amp;quot;1 days&amp;quot;  #退回到之前1天的版本 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;分支与标签&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git branch                   #显示所有本地分支
$ git checkout &amp;lt;branch/tag&amp;gt;    #切换到指定分支和标签
$ git branch &amp;lt;new-branch&amp;gt;      #创建新分支
$ git branch -d &amp;lt;branch&amp;gt;       #删除本地分支
$ git tag                      #列出所有本地标签
$ git tag &amp;lt;tagname&amp;gt;            #基于最新提交创建标签
$ git tag -d &amp;lt;tagname&amp;gt;         #删除标签
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;合并与衍合&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git merge &amp;lt;branch&amp;gt;        #合并指定分支到当前分支
$ git rebase &amp;lt;branch&amp;gt;       #衍合指定分支到当前分支
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;远程操作&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git remote -v                   #查看远程版本库信息
$ git remote show &amp;lt;remote&amp;gt;        #查看指定远程版本库信息
$ git remote add &amp;lt;remote&amp;gt; &amp;lt;url&amp;gt;   #添加远程版本库
$ git fetch &amp;lt;remote&amp;gt;              #从远程库获取代码
$ git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;      #下载代码及快速合并
$ git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;      #上传代码及快速合并
$ git push &amp;lt;remote&amp;gt; :&amp;lt;branch/tag-name&amp;gt;  #删除远程分支或标签
$ git push --tags                       #上传所有标签
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;资料链接&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;Try Git&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      </item>
    
      <item>
        <title>php文件上传</title>
        <link>/2015/03/01/files-upload.html</link>
        <guid isPermaLink="true">/2015/03/01/files-upload.html</guid>
        <pubDate>Sun, 01 Mar 2015 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;什么是文件上传&lt;/h3&gt;

&lt;p&gt;把&lt;code&gt;浏览器&lt;/code&gt;所在电脑的文件存放到&lt;code&gt;服务器&lt;/code&gt;上, 这个过程称之为文件上传&lt;/p&gt;

&lt;p&gt;上传分为两个部分:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将浏览器所在电脑的文件选中,提交给服务器,服务器要接收文件.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器必须要接收文件: apache不能接收文件,PHP负责接收.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;前期准备&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设置php.ini&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确保上传功能被打开&lt;/p&gt;

&lt;p&gt;file_uploads = On&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置上传文件的临时存放目录&lt;/p&gt;

&lt;p&gt;upload&lt;em&gt;tmp&lt;/em&gt;dir =&amp;quot;E:\PHP\upload&amp;quot;  #;设置文件上传临时保存路径,默认是在c:/windows/temp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置文件表单域&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;input type=’file’ name=’myfile’&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设置post提交二进制&lt;/p&gt;

&lt;p&gt;&lt;code&gt;enctype=”multipart/form-data”&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;code&gt;$_FILES获取的数据&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;myfile&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;                                         &lt;span class=&quot;c1&quot;&gt;#上传文件的文件名&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;123123.jpg&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;                                         &lt;span class=&quot;c1&quot;&gt;#上传文件的类型:大类型/格式  称为MIME类型&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;image/jpeg&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tmp_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;                                     &lt;span class=&quot;c1&quot;&gt;#上传到服务器时临时存储文件路径&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;E:\PHP\upload\php7FC2.tmp&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;                                            &lt;span class=&quot;c1&quot;&gt;#错误描述码&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;                                         &lt;span class=&quot;c1&quot;&gt;#上传文件大小&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6340&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;使用的函数&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Move_uploaded_file(文件所在目录[文件名], 文件要存储的目录[带文件名])&lt;/code&gt;移动文件--&amp;gt;原文件不存在&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Copy(文件所在目录,文件要存储的目录&lt;/code&gt;复制文件--&amp;gt;原文件存在&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;使用时注意的问题&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;move_uploaded_file()&lt;/code&gt;会事先检测源文件是否通过php上传过来的，否则不予移动(&lt;code&gt;只能用post&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;move_uploaded_file()&lt;/code&gt;这个函数虽然&lt;code&gt;多次调用但是只能执行一次&lt;/code&gt;，原因就在于&lt;code&gt;move_uploaded_file()&lt;/code&gt;只支持post提交的信息，也就是用户只提交了一个post，第一次调用被执行后，之后就不是post的值也就是说不在执行了，解决办法就是&lt;code&gt;用copy代替move_uploaded_file()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;封装一个上传文件函数&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * 上传文件&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * @param1 array $file,要上传的文件信息&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * @param2 string $path,文件要上传的路径&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * @param3 string &amp;amp;$error,记录错误信息&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * @return string 文件的名字(新名字)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//定义错误信息: 专门记录错误: 在函数外部能访问&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//验证$file的合法性&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;//不是数组&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;          &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;上传文件不合法!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//验证系统错误处理&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;文件过大,超过服务器允许的大小!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;文件超过浏览器允许的大小!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;文件只上传部分!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;用户没有选中要上传的文件!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;服务器错误!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//都没有错误: 移动文件&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;      &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getRandomName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;move_uploaded_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tmp_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;//成功&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;//失败&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt;          &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;文件移动失败!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;46&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * 生成文件名: YYYYmmddHHIISS + 随机6位字符串&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * @param1 string $name,文件原始名字: 在浏览器所在电脑的名字&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;     * @return string 新的名字&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;51&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;52&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRandomName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;53&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//构造时间日期部分&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;54&lt;/span&gt;      &lt;span class=&quot;nv&quot;&gt;$newname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;YmdHis&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;55&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//获取随机部分&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;56&lt;/span&gt;      &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;57&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//随机取6位&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;58&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;59&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;//每次随机取一位&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;60&lt;/span&gt;          &lt;span class=&quot;nv&quot;&gt;$newname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mt_rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;61&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;62&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//构造后缀名&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;63&lt;/span&gt;      &lt;span class=&quot;nv&quot;&gt;$newname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strrchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;64&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//返回&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;65&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$newname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;66&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
      </item>
    
  </channel>
</rss>